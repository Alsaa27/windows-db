<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCADcANwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2SiiigAooooAKKKKACimSzJCu6RsAnA9SfQDvVS7vRb2z3F1N
        HZWyfeklYA/rwP1PtQBbklSFd0jqo9Saj+0PJ/qYHYf3n+Qfrz+lcJqfxFtrZ2XRLM3EnT7VdZCn6D7x
        H/fIrjtU8QatrG4X9/NJGf8Alkh8uP8A75XGfxzQB6rqHifS9NYpfazawyA4MUI3yA/QZP6Vz938S9Gj
        BEFtqd4exYiNT+bD+VeahAi7UUKPQDFNYcGgDt2+JwiO6y8OQxt2dpSc/kn9aif4sauDxp9ivsxkz/Su
        +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
        oooAKKKKACiiigD/2Q==
</value>
  </data>
</root>